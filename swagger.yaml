openapi: 3.1.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
- url: https://jobs-api-01.up.railway.app/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterUserRequest'
              - examples:
                - name: Peter Lannister
                  email: peterlannister3@gmail.com
                  password: Blaugrana20$
                  confirmPassword: Blaugrana20$
              contentMediaType: application/json
            example:
              name: Peter Lannister
              email: peterlannister3@gmail.com
              password: Blaugrana20$
              confirmPassword: Blaugrana20$
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
    parameters: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginUserRequest'
              - examples:
                - email: peterlannister3@gmail.com
                  password: Blaugrana20$
              contentMediaType: application/json
            example:
              email: peterlannister3@gmail.com
              password: Blaugrana20$
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
    parameters: []
  /jobs:
    get:
      tags:
      - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    parameters: []
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobRequest'
              - examples:
                - company: Meta
                  position: Frontend Developer
              contentMediaType: application/json
            example:
              company: Meta
              position: Frontend Developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    get:
      tags:
      - Jobs
      summary: Get Job
      operationId: GetJob
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the job to get
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters:
        - in: path
          name: jobId
          schema:
            type: string
          required: true
          description: ID of the job to update
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateJobRequest'
              - examples:
                - company: Google
                  position: Backend Engineer Intern
              contentMediaType: application/json
            example:
              company: Google
              position: Backend Engineer Intern
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters:
        - in: path
          name: jobId
          schema:
            type: string
          required: true
          description: ID of the job to delete
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
      - name
      - email
      - password
      - confirmPassword
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
      examples:
      - name: Peter Lannister
        email: peterlannister3@gmail.com
        password: Blaugrana20$
        confirmPassword: Blaugrana20$
    LoginUserRequest:
      title: LoginUserRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      examples:
      - email: peterlannister3@gmail.com
        password: Blaugrana20$
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      examples:
      - company: Meta
        position: Frontend Developer
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      examples:
      - company: Google
        position: Backend Engineer Intern
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
- name: Jobs
